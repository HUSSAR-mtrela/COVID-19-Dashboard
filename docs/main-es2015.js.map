{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/heatmap.worker.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/list-cases/list-cases.component.ts","./src/app/list-cases/list-cases.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/map-cases/map-cases.component.ts","./src/app/map-cases/map-cases.component.html","./src/app/services/data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = __webpack_public_path__ + \"0-es2015.worker.js\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainComponent } from './main/main.component';\r\nimport { MapCasesComponent } from './map-cases/map-cases.component';\r\nimport { ListCasesComponent } from './list-cases/list-cases.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/main', pathMatch: 'full' },\r\n  { path: 'main', component: MainComponent, data: { text: 'main' } },\r\n  { path: 'map-cases', component: MapCasesComponent, data: { text: 'active-cases-map' } },\r\n  { path: 'list-cases', component: ListCasesComponent, data: { text: 'list-cases' } }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  host: {class: 'app'}\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n","import { BrowserModule, HammerModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MainComponent } from './main/main.component';\r\nimport { IgxButtonModule, IgxCardModule, IgxExpansionPanelModule,\r\n  IgxIconModule, IgxBottomNavModule, IgxAvatarModule, IgxRippleModule, IgxButtonGroupModule, IgxTabsModule,\r\n  IgxListModule,\r\n  IgxNavbarModule,\r\n  IgxDividerModule} from 'igniteui-angular';\r\nimport { IgxDataChartCoreModule, IgxDataChartCategoryModule,\r\n    IgxDataChartAnnotationModule, IgxCalloutLayerModule, IgxCrosshairLayerModule,\r\n    IgxFinalValueLayerModule, IgxDataChartInteractivityModule, IgxLegendModule, IgxTimeXAxisModule,\r\n    IgxNumericXAxisModule, IgxCategoryXAxisModule, IgxFinancialChartModule } from 'igniteui-angular-charts';\r\nimport { IgxGeographicMapCoreModule, IgxGeographicMapModule } from 'igniteui-angular-maps';\r\nimport { MapCasesComponent } from './map-cases/map-cases.component';\r\nimport { ListCasesComponent } from './list-cases/list-cases.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    MapCasesComponent,\r\n    ListCasesComponent,\r\n    HeaderComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HammerModule,\r\n    IgxGeographicMapCoreModule,\r\n    IgxButtonGroupModule,\r\n    IgxTabsModule,\r\n    IgxGeographicMapModule,\r\n    IgxRippleModule,\r\n    IgxListModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    IgxButtonModule,\r\n    IgxCardModule,\r\n    IgxExpansionPanelModule,\r\n    IgxIconModule,\r\n    IgxBottomNavModule,\r\n    IgxAvatarModule,\r\n    IgxRippleModule,\r\n    IgxDataChartCoreModule,\r\n    IgxDataChartCategoryModule,\r\n    IgxDataChartAnnotationModule,\r\n    IgxCalloutLayerModule,\r\n    IgxCrosshairLayerModule,\r\n    IgxFinalValueLayerModule,\r\n    IgxDataChartInteractivityModule,\r\n    IgxLegendModule,\r\n    IgxTimeXAxisModule,\r\n    IgxNumericXAxisModule,\r\n    IgxCategoryXAxisModule,\r\n    IgxFinancialChartModule,\r\n    IgxNavbarModule,\r\n    IgxCardModule,\r\n    IgxDividerModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"app__footer\">\r\n  <div class=\"app__footer-item\">\r\n    <span>Last updated at (M/D/YYYY)</span>\r\n    <span>03/12/2020 12:53:03 PM</span>\r\n  </div>\r\n  <div class=\"app__footer-item app__footer-item--info\">\r\n    <span>Data source: WHO, National Health Commission of the People’s</span>\r\n    <span>built with Ignite UI for Angular</span>\r\n  </div>\r\n</footer>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header class=\"app__header\">\r\n  <igx-navbar title=\"Coronavirus COVID-19 Global Cases\"></igx-navbar>\r\n</header>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { RemoteDataService } from '../services/data.service';\r\n\r\ninterface IListItem {\r\n  country: string;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-list-cases',\r\n    templateUrl: './list-cases.component.html',\r\n    styleUrls: ['./list-cases.component.scss'],\r\n    host: {class: 'app__list'}\r\n})\r\nexport class ListCasesComponent implements OnInit {\r\n\r\n    @Input() public type: string;\r\n    public dataSets = ['Confirmed', 'Recovered', 'Deaths'];\r\n    public data: IListItem[];\r\n    public totalNumber: number;\r\n    private dataRequest$: any;\r\n    constructor(private dataService: RemoteDataService) { }\r\n\r\n    public ngOnInit() {\r\n      if (this.type === 'Confirmed') {\r\n        this.loadDataSet(0);\r\n      }\r\n      if (this.type === 'Recovered') {\r\n        this.loadDataSet(1);\r\n      }\r\n      if (this.type === 'Deaths') {\r\n        this.loadDataSet(2);\r\n      }\r\n    }\r\n\r\n    public loadDataSet(index: number) {\r\n        this.dataRequest$ = this.dataService.getDataSet(index);\r\n        this.dataRequest$.subscribe(csvData => {\r\n            this.transformData(csvData);\r\n        });\r\n    }\r\n\r\n    private transformData(data: string): any {\r\n      const csvLines = data.split('\\n');\r\n      const listData: any[] = [];\r\n      let totalNumber = 0;\r\n\r\n      for (let i = 1; i < csvLines.length; i++) {\r\n        const columns = csvLines[i].split(',');\r\n        const country2 = columns[1];\r\n        const value2 = parseInt(columns[columns.length - 1], 10);\r\n        const listItem: IListItem = { country: country2, value: value2};\r\n        totalNumber += value2;\r\n        listData.push(listItem);\r\n      }\r\n\r\n      this.totalNumber = totalNumber;\r\n      this.data = listData.sort((a, b) => {\r\n        return b.value - a.value;\r\n      });\r\n    }\r\n\r\n}\r\n","<igx-card class=\"app__list-holder\">\r\n  <igx-card-header class=\"app__card-header app__card-header--info\">\r\n      <h3 igxCardHeaderTitle>{{ totalNumber | number}}</h3>\r\n      <h5 igxCardHeaderSubtitle>Total {{ type }}</h5>\r\n  </igx-card-header>\r\n  <igx-divider></igx-divider>\r\n  <igx-card-content class=\"app__card-content\">\r\n      <igx-list class=\"app__list-inner\">\r\n        <igx-list-item #item *ngFor=\"let item of data\">\r\n          <span igxListLineTitle>{{ item.country }}</span>\r\n          <span igxListAction>{{ item.value | number }}</span>\r\n        </igx-list-item>\r\n      </igx-list>\r\n  </igx-card-content>\r\n</igx-card>\r\n","import { Component, OnInit, OnDestroy, EventEmitter, Output, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { IgxExpansionPanelComponent } from 'igniteui-angular';\r\nimport { IgxDataChartComponent, IgxNumericYAxisComponent, IgxCategoryXAxisComponent } from 'igniteui-angular-charts';\r\nimport { RemoteDataService } from '../services/data.service';\r\nimport { MapCasesComponent } from '../map-cases/map-cases.component';\r\nimport { ListCasesComponent } from '../list-cases/list-cases.component';\r\n\r\ninterface IListItem {\r\n  country: string;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n  providers: [RemoteDataService],\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n  host: {class: 'app__main'}\r\n})\r\nexport class MainComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(IgxExpansionPanelComponent, { static: true })\r\n  public panel: IgxExpansionPanelComponent;\r\n  @ViewChild('map', {static: true}) public map: MapCasesComponent;\r\n  @ViewChild('confirmedList', { static: true }) public confirmedList: ListCasesComponent;\r\n  @ViewChild('recoveredList', { static: true }) public recoveredList: ListCasesComponent;\r\n  @ViewChild('deathsList', { static: true }) public deathsList: ListCasesComponent;\r\n\r\n  private dataRequest$: any;\r\n  public confirmed: string;\r\n  public recovered: string;\r\n  public deaths: string;\r\n  public chartData: any[] = [];\r\n  public dailyData: any[] = [];\r\n  public dailyConfirmedCases: Map<string, number> = new Map();\r\n  public dailyRecoveredCases: Map<string, number> = new Map();\r\n\r\n  @ViewChild('chart', { static: true })\r\n  public chart: IgxDataChartComponent;\r\n\r\n  @ViewChild('xAxis', { static: true })\r\n  public xAxis: IgxCategoryXAxisComponent;\r\n\r\n  @ViewChild('yAxis', { static: true })\r\n  public yAxis: IgxNumericYAxisComponent;\r\n\r\n  constructor(private dataService: RemoteDataService) {\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.dataRequest$ = this.dataService.getDataSet(0);\r\n    this.dataRequest$.subscribe(csvData => {\r\n      const csvLines = csvData.split('\\n');\r\n      this.dailyConfirmedCases = this.fillData(csvLines);\r\n\r\n      // Transfor the data for Active cases Chart\r\n      for (const item of this.dailyConfirmedCases) {\r\n        this.dailyData.push({ date: new Date(item[0]), activeCases: item[1] });\r\n      }\r\n    });\r\n\r\n\r\n    this.dataRequest$ = this.dataService.getDataSet(1);\r\n    this.dataRequest$.subscribe(csvData => {\r\n      const csvLines = csvData.split('\\n');\r\n      this.dailyRecoveredCases = this.fillData(csvLines);\r\n\r\n      // Transfor the data for Active cases Chart\r\n      let i = 0;\r\n      for (const item of this.dailyRecoveredCases) {\r\n        this.dailyData[i].recoveredCases = item[1];\r\n        i++;\r\n      }\r\n\r\n      // Push/Assign the data to Active cases Chart\r\n      this.chartData = this.dailyData;\r\n    });\r\n  }\r\n\r\n  public fillData(csvData) {\r\n    let columns = [];\r\n    let day: string = null;\r\n    const cases: Map<string, number> = new Map();\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let rowIdx = 0; rowIdx < csvData.length; rowIdx++) {\r\n      columns = csvData[rowIdx].replace(', ', ' ').split(',');\r\n\r\n      for (let columnIdx = 4; columnIdx <= columns.length - 1; columnIdx++) {\r\n        if (rowIdx === 0) {\r\n          day = new Date(columns[columnIdx]).toUTCString();\r\n          cases.set(day, 0);\r\n        } else {\r\n          const compound = cases.get(new Date(csvData[0].split(',')[columnIdx]).toUTCString()) +\r\n            parseInt(columns[columnIdx], 10);\r\n\r\n          cases.set(new Date(csvData[0].split(',')[columnIdx]).toUTCString(), compound);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Calculate daily difference.\r\n    for (let index = 0; index < cases.size; index++) {\r\n      let newCasesCount = 0;\r\n      const currentElementKey = Array.from(cases.keys())[index];\r\n      const currentElementValue =  cases.get(currentElementKey);\r\n\r\n      const nextElementKey = Array.from(cases.keys())[index + 1];\r\n      const nextElementValue =  cases.get(nextElementKey);\r\n\r\n      if (currentElementValue < nextElementValue) {\r\n        newCasesCount = nextElementValue - currentElementValue;\r\n\r\n        cases.set(currentElementKey, newCasesCount);\r\n      } else {\r\n        cases.set(currentElementKey, 0);\r\n      }\r\n    }\r\n\r\n    return cases;\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    if (this.dataRequest$) {\r\n      this.dataRequest$.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<main class=\"app__main-inner\">\r\n    <app-list-cases class=\"app__list--confirmed\" #confirmedList type=\"Confirmed\"></app-list-cases>\r\n\r\n    <section class=\"app__col app__col--map\">\r\n        <app-map-cases #map></app-map-cases>\r\n    </section>\r\n\r\n    <div class=\"app__col app__col--stats\">\r\n\r\n        <div class=\"app__row app__list-stack\">\r\n            <app-list-cases class=\"app__list--deaths\" #deathsList type=\"Deaths\"></app-list-cases>\r\n            <app-list-cases class=\"app__list--recovered\" #recoveredList type=\"Recovered\"></app-list-cases>\r\n        </div>\r\n\r\n        <div class=\"app__charts\">\r\n            <igx-tabs  class=\"app__charts-tabs\" tabsType=\"fixed\">\r\n                <igx-tabs-group label=\"actual\"></igx-tabs-group>\r\n                <igx-tabs-group label=\"logarithmic\"></igx-tabs-group>\r\n                <igx-tabs-group label=\"daily\">\r\n                    <div class=\"app__chart-wrapper\">\r\n                      <igx-legend class=\"app__charts-legend\" #legend orientation=\"Horizontal\"></igx-legend>\r\n                      <div class=\"app__chart-component\">\r\n                        <igx-data-chart  class=\"app__charts-chart\" #chart [legend]=\"legend\" [dataSource]=\"chartData\" isHorizontalZoomEnabled=\"true\">\r\n                          <igx-numeric-y-axis #yAxis title=\"New and recovered cases\">\r\n                          </igx-numeric-y-axis>\r\n                          <igx-category-x-axis label=\"date\" title=\"Date\" #xAxis>\r\n                          </igx-category-x-axis>\r\n\r\n                            <igx-column-series valueMemberPath=\"activeCases\" labelMemberPath=\"date\"\r\n                                title=\"New Confirmed Cases\" [xAxis]=\"xAxis\" [yAxis]=\"yAxis\" showDefaultTooltip=\"true\">\r\n                            </igx-column-series>\r\n                            <igx-column-series valueMemberPath=\"recoveredCases\" labelMemberPath=\"date\"\r\n                                title=\"Recovered Cases\" [xAxis]=\"xAxis\" [yAxis]=\"yAxis\" showDefaultTooltip=\"true\">\r\n                            </igx-column-series>\r\n                        </igx-data-chart>\r\n                      </div>\r\n                    </div>\r\n                </igx-tabs-group>\r\n            </igx-tabs>\r\n        </div>\r\n    </div>\r\n</main>","import { Component, TemplateRef, ViewChild, OnInit } from '@angular/core';\r\nimport { IgxGeographicTileSeriesComponent, IgxTileGeneratorMapImagery\r\n} from 'igniteui-angular-maps';\r\nimport { IgxGeographicMapComponent } from 'igniteui-angular-maps';\r\nimport { IgxHeatTileGenerator } from 'igniteui-angular-core';\r\nimport { RemoteDataService } from '../services/data.service';\r\n\r\n@Component({\r\n    providers: [RemoteDataService],\r\n    selector: 'app-map-cases',\r\n    templateUrl: './map-cases.component.html',\r\n    styleUrls: ['./map-cases.component.scss'],\r\n    host: {class: 'app__map-wrapper'}\r\n})\r\nexport class MapCasesComponent implements OnInit {\r\n\r\n    @ViewChild('map', {static: true}) public map: IgxGeographicMapComponent;\r\n    @ViewChild('template', {static: true}) public tooltip: TemplateRef<object>;\r\n\r\n    public tileImagery: IgxTileGeneratorMapImagery;\r\n    public confirmedSeries = new IgxGeographicTileSeriesComponent();\r\n    public recoveredSeries = new IgxGeographicTileSeriesComponent();\r\n    public deathSeries = new IgxGeographicTileSeriesComponent();\r\n    public series: Array<IgxGeographicTileSeriesComponent> = [this.confirmedSeries, this.recoveredSeries, this.deathSeries];\r\n    public dataSetButtons: any[];\r\n    public dataSets = ['Confirmed', 'Recovered', 'Deaths'];\r\n    public scaleColors = [\r\n        [\r\n            'rgba(255, 0, 0, .1)',\r\n            'rgba(255, 0, 0, .3)',\r\n            'rgba(255, 0, 0, .5)',\r\n            'rgba(255, 0, 0, .6)',\r\n            'rgba(255, 0, 0, .7843)'],\r\n        [\r\n            'rgba(50,205,50, 0.1)',\r\n            'rgba(50,205,50, 0.3)',\r\n            'rgba(50,205,50, 0.5)',\r\n            'rgba(50,205,50, 0.7)',\r\n            'rgba(50,205,50, 0.9)'],\r\n        [\r\n            'rgba(255, 0, 0, .1)',\r\n            'rgba(255, 0, 0, .3)',\r\n            'rgba(255, 0, 0, .5)',\r\n            'rgba(255, 0, 0, .6)',\r\n            'rgba(255, 0, 0, .7843)']\r\n    ];\r\n    public data: string;\r\n    private dataRequest$: any;\r\n\r\n    constructor(private dataService: RemoteDataService) {\r\n        this.dataSetButtons = [\r\n            {\r\n                name: 'Total',\r\n                selected: true\r\n            },\r\n            {\r\n                name: 'Recovered',\r\n                selected: false\r\n            },\r\n            {\r\n                name: 'Deaths',\r\n                selected: false\r\n            }\r\n    ];\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.loadDataSet(0);\r\n    }\r\n\r\n    public loadDataSet(index: number) {\r\n        this.dataRequest$ = this.dataService.getDataSet(index);\r\n        this.dataRequest$.subscribe(csvData => {\r\n            this.onDataLoaded(csvData, index);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * fetching JSON data with geographic locations from public folder\r\n     */\r\n    public onDataSetSelected(event: any) {\r\n        this.loadDataSet(event.index);\r\n    }\r\n\r\n    /**\r\n     * Fill the map series corresponding to the passd index with tile imagery and add to map.\r\n     */\r\n    public onDataLoaded(csvData: string, index: number) {\r\n        csvData = csvData.replace(/, /g, ' - ');\r\n        csvData = csvData.replace(/\"/g, '');\r\n        const csvLines = csvData.split('\\n');\r\n        const lat: number[] = [];\r\n        const lon: number[] = [];\r\n        const val: number[] = [];\r\n        this.tileImagery = new IgxTileGeneratorMapImagery();\r\n\r\n        for (let i = 1; i < csvLines.length; i++) {\r\n            const columns = csvLines[i].split(',');\r\n            lat.push(parseInt(columns[2], 10));\r\n            lon.push(parseInt(columns[3], 10));\r\n            const value = parseInt(columns[columns.length - 1], 10);\r\n            val.push(value);\r\n        }\r\n\r\n        // generating heat map imagery tiles\r\n        const gen = new IgxHeatTileGenerator();\r\n        gen.xValues = lon;\r\n        gen.yValues = lat;\r\n        gen.values = val;\r\n        gen.blurRadius = 6;\r\n        gen.maxBlurRadius = 20;\r\n        gen.useBlurRadiusAdjustedForZoom = true;\r\n        gen.minimumColor = 'rgba(100, 255, 0, 0.5)';\r\n        gen.maximumColor = 'rgba(255, 255, 0, 0.5)';\r\n        gen.useGlobalMinMax = true;\r\n        gen.useGlobalMinMaxAdjustedForZoom = true;\r\n        gen.useLogarithmicScale = true;\r\n        gen.useWebWorkers = true;\r\n        // gen.webWorkerInstance = new Worker();\r\n        gen.webWorkerInstance = new Worker('../heatmap.worker.ts', { type: 'module' });\r\n\r\n        gen.scaleColors = this.scaleColors[index];\r\n        this.tileImagery.tileGenerator = gen;\r\n\r\n        // generating heat map series\r\n        this.series[index].name = 'heatMapSeries';\r\n        this.series[index].tileImagery = this.tileImagery;\r\n\r\n        this.map.clearTileCache();\r\n        // add heat map series to the map\r\n        this.map.series.clear();\r\n        this.map.series.add(this.series[index]);\r\n        const geoBounds = {\r\n            height: 140,\r\n            left: -80,\r\n            top: 0,\r\n            width: 260\r\n        };\r\n        this.map.zoomToGeographic(geoBounds);\r\n        this.map.zoomToGeographic(geoBounds);\r\n    }\r\n\r\n    /**\r\n     * Fill the map series corresponding to the passd index with tile imagery and add to map.\r\n     */\r\n    // public addMapSeries(csvData: string, index: number) {\r\n    //     const csvLines = csvData.split('\\n');\r\n    //     const lat: number[] = [];\r\n    //     const lon: number[] = [];\r\n    //     const val: number[] = [];\r\n    //     this.tileImagery = new IgxTileGeneratorMapImagery();\r\n\r\n    //     for (let i = 1; i < csvLines.length; i++) {\r\n    //         const columns = csvLines[i].split(',');\r\n    //         lat.push(parseInt(columns[2], 10));\r\n    //         lon.push(parseInt(columns[3], 10));\r\n    //         const value = parseInt(columns[columns.length - 1], 10);\r\n    //         val.push(value);\r\n    //     }\r\n\r\n    //     // generating heat map imagery tiles\r\n    //     const gen = new IgxHeatTileGenerator();\r\n    //     gen.xValues = lon;\r\n    //     gen.yValues = lat;\r\n    //     gen.values = val;\r\n    //     gen.blurRadius = 6;\r\n    //     gen.maxBlurRadius = 20;\r\n    //     gen.useBlurRadiusAdjustedForZoom = true;\r\n    //     gen.minimumColor = 'rgba(100, 255, 0, 0.5)';\r\n    //     gen.maximumColor = 'rgba(255, 255, 0, 0.5)';\r\n    //     gen.useGlobalMinMax = true;\r\n    //     gen.useGlobalMinMaxAdjustedForZoom = true;\r\n    //     gen.useLogarithmicScale = true;\r\n    //     gen.useWebWorkers = true;\r\n    //     // gen.webWorkerInstance = new Worker();\r\n    //     gen.webWorkerInstance = new Worker('../heatmap.worker.ts', { type: 'module' });\r\n\r\n    //     gen.scaleColors = this.scaleColors[index];\r\n    //     this.tileImagery.tileGenerator = gen;\r\n\r\n    //     // generating heat map series\r\n    //     this.series[index].name = 'heatMapSeries';\r\n    //     this.series[index].tileImagery = this.tileImagery;\r\n\r\n    //     // add heat map series to the map\r\n    //     this.map.series.clear();\r\n    //     this.map.series.add(this.series[index]);\r\n    //     const geoBounds = {\r\n    //         height: Math.abs(50 - 15),\r\n    //         left: 85,\r\n    //         top: 15,\r\n    //         width: Math.abs(-130 + 65)\r\n    //     };\r\n    //     // this.map.zoomToGeographic(geoBounds);\r\n    // }\r\n}\r\n","<div class=\"app__map-inner\">\r\n    <igx-buttongroup class=\"app__map-button-group\" [multiSelection]=\"false\" (onSelect)=\"onDataSetSelected($event)\">\r\n      <button igxButton *ngFor=\"let button of dataSetButtons\" [selected]=\"button.selected\">\r\n        <span class=\"ellipsis\">\r\n          {{ button.name }}\r\n        </span>\r\n      </button>\r\n    </igx-buttongroup>\r\n    <igx-geographic-map class=\"app__map\" #map zoomable=\"true\"></igx-geographic-map>\r\n  </div>\r\n\r\n  <ng-template let-series=\"series\" let-item=\"item\" #template>\r\n      <div>\r\n          <span>Country: {{item.county}}</span>\r\n          <span>Infected: {{item.density}}</span>\r\n      </div>\r\n  </ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n// base URL for the data files\r\nconst BASE_URL = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series';\r\nconst TIME_SERIES = 'csse_covid_19_time_series';\r\nconst EMPTY_STRING = '';\r\n\r\nexport enum DATA_SET {\r\n    CONFIRMED = 'Confirmed',\r\n    RECOVERED = 'Recovered',\r\n    DEATHS = 'Deaths'\r\n}\r\n\r\n@Injectable()\r\nexport class RemoteDataService {\r\n    public dataSets = ['Confirmed', 'Recovered', 'Deaths'];\r\n    constructor() {}\r\n\r\n    /**\r\n     * Retrieves data from specific file, based on the index passed.\r\n     */\r\n    public getDataSet(index: number): Observable<any> {\r\n        const baseDataPath = '../../assets/Data/time_series_19-covid-';\r\n        const dataSet = this.dataSets[index];\r\n        const data$ = Observable.create(observer => {\r\n            fetch(`${baseDataPath}${dataSet}.csv`)\r\n              .then(response => response.text()) // or text() or blob() etc.\r\n              .then(data => {\r\n                observer.next(data);\r\n                observer.complete();\r\n              })\r\n              .catch(err => observer.error(err));\r\n          });\r\n\r\n        return data$;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}