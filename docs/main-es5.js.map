{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/heatmap.worker.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/list-cases/list-cases.component.ts","webpack:///src/app/list-cases/list-cases.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/map-cases/map-cases.component.ts","webpack:///src/app/map-cases/map-cases.component.html","webpack:///src/app/services/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","data","text","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","host","AppModule","declarations","providers","bootstrap","FooterComponent","HeaderComponent","ListCasesComponent","dataService","dataSets","type","loadDataSet","index","dataRequest$","getDataSet","subscribe","csvData","transformData","csvLines","split","listData","totalNumber","i","length","columns","country2","value2","parseInt","listItem","country","value","push","sort","a","b","MainComponent","chartData","dailyData","dailyConfirmedCases","Map","dailyRecoveredCases","fillData","item","date","Date","activeCases","recoveredCases","day","cases","rowIdx","replace","columnIdx","toUTCString","set","compound","get","size","newCasesCount","currentElementKey","Array","from","currentElementValue","nextElementKey","nextElementValue","unsubscribe","MapCasesComponent","confirmedSeries","recoveredSeries","deathSeries","series","scaleColors","dataSetButtons","name","selected","onDataLoaded","event","lat","lon","val","tileImagery","gen","xValues","yValues","values","blurRadius","maxBlurRadius","useBlurRadiusAdjustedForZoom","minimumColor","maximumColor","useGlobalMinMax","useGlobalMinMaxAdjustedForZoom","useLogarithmicScale","useWebWorkers","webWorkerInstance","Worker","tileGenerator","map","clearTileCache","clear","add","geoBounds","height","left","top","width","zoomToGeographic","onDataSetSelected","BASE_URL","TIME_SERIES","EMPTY_STRING","DATA_SET","RemoteDataService","baseDataPath","dataSet","data$","create","observer","fetch","response","next","complete","err","error","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = __webpack_public_path__ + \"0-es2015.worker.js\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainComponent } from './main/main.component';\r\nimport { MapCasesComponent } from './map-cases/map-cases.component';\r\nimport { ListCasesComponent } from './list-cases/list-cases.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/main', pathMatch: 'full' },\r\n  { path: 'main', component: MainComponent, data: { text: 'main' } },\r\n  { path: 'map-cases', component: MapCasesComponent, data: { text: 'active-cases-map' } },\r\n  { path: 'list-cases', component: ListCasesComponent, data: { text: 'list-cases' } }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  host: {class: 'app'}\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n","import { BrowserModule, HammerModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MainComponent } from './main/main.component';\r\nimport { IgxButtonModule, IgxCardModule, IgxExpansionPanelModule,\r\n  IgxIconModule, IgxBottomNavModule, IgxAvatarModule, IgxRippleModule, IgxButtonGroupModule, IgxTabsModule,\r\n  IgxListModule,\r\n  IgxNavbarModule,\r\n  IgxDividerModule} from 'igniteui-angular';\r\nimport { IgxDataChartCoreModule, IgxDataChartCategoryModule,\r\n    IgxDataChartAnnotationModule, IgxCalloutLayerModule, IgxCrosshairLayerModule,\r\n    IgxFinalValueLayerModule, IgxDataChartInteractivityModule, IgxLegendModule, IgxTimeXAxisModule,\r\n    IgxNumericXAxisModule, IgxCategoryXAxisModule, IgxFinancialChartModule } from 'igniteui-angular-charts';\r\nimport { IgxGeographicMapCoreModule, IgxGeographicMapModule } from 'igniteui-angular-maps';\r\nimport { MapCasesComponent } from './map-cases/map-cases.component';\r\nimport { ListCasesComponent } from './list-cases/list-cases.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    MapCasesComponent,\r\n    ListCasesComponent,\r\n    HeaderComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HammerModule,\r\n    IgxGeographicMapCoreModule,\r\n    IgxButtonGroupModule,\r\n    IgxTabsModule,\r\n    IgxGeographicMapModule,\r\n    IgxRippleModule,\r\n    IgxListModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    IgxButtonModule,\r\n    IgxCardModule,\r\n    IgxExpansionPanelModule,\r\n    IgxIconModule,\r\n    IgxBottomNavModule,\r\n    IgxAvatarModule,\r\n    IgxRippleModule,\r\n    IgxDataChartCoreModule,\r\n    IgxDataChartCategoryModule,\r\n    IgxDataChartAnnotationModule,\r\n    IgxCalloutLayerModule,\r\n    IgxCrosshairLayerModule,\r\n    IgxFinalValueLayerModule,\r\n    IgxDataChartInteractivityModule,\r\n    IgxLegendModule,\r\n    IgxTimeXAxisModule,\r\n    IgxNumericXAxisModule,\r\n    IgxCategoryXAxisModule,\r\n    IgxFinancialChartModule,\r\n    IgxNavbarModule,\r\n    IgxCardModule,\r\n    IgxDividerModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"app__footer\">\r\n  <div class=\"app__footer-item\">\r\n    <span>Last updated at (M/D/YYYY)</span>\r\n    <span>03/12/2020 12:53:03 PM</span>\r\n  </div>\r\n  <div class=\"app__footer-item app__footer-item--info\">\r\n    <span>Data source: WHO, National Health Commission of the People’s</span>\r\n    <span>built with Ignite UI for Angular</span>\r\n  </div>\r\n</footer>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header class=\"app__header\">\r\n  <igx-navbar title=\"Coronavirus COVID-19 Global Cases\"></igx-navbar>\r\n</header>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { RemoteDataService } from '../services/data.service';\r\n\r\ninterface IListItem {\r\n  country: string;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-list-cases',\r\n    templateUrl: './list-cases.component.html',\r\n    styleUrls: ['./list-cases.component.scss'],\r\n    host: {class: 'app__list'}\r\n})\r\nexport class ListCasesComponent implements OnInit {\r\n\r\n    @Input() public type: string;\r\n    public dataSets = ['Confirmed', 'Recovered', 'Deaths'];\r\n    public data: IListItem[];\r\n    public totalNumber: number;\r\n    private dataRequest$: any;\r\n    constructor(private dataService: RemoteDataService) { }\r\n\r\n    public ngOnInit() {\r\n      if (this.type === 'Confirmed') {\r\n        this.loadDataSet(0);\r\n      }\r\n      if (this.type === 'Recovered') {\r\n        this.loadDataSet(1);\r\n      }\r\n      if (this.type === 'Deaths') {\r\n        this.loadDataSet(2);\r\n      }\r\n    }\r\n\r\n    public loadDataSet(index: number) {\r\n        this.dataRequest$ = this.dataService.getDataSet(index);\r\n        this.dataRequest$.subscribe(csvData => {\r\n            this.transformData(csvData);\r\n        });\r\n    }\r\n\r\n    private transformData(data: string): any {\r\n      const csvLines = data.split('\\n');\r\n      const listData: any[] = [];\r\n      let totalNumber = 0;\r\n\r\n      for (let i = 1; i < csvLines.length; i++) {\r\n        const columns = csvLines[i].split(',');\r\n        const country2 = columns[1];\r\n        const value2 = parseInt(columns[columns.length - 1], 10);\r\n        const listItem: IListItem = { country: country2, value: value2};\r\n        totalNumber += value2;\r\n        listData.push(listItem);\r\n      }\r\n\r\n      this.totalNumber = totalNumber;\r\n      this.data = listData.sort((a, b) => {\r\n        return b.value - a.value;\r\n      });\r\n    }\r\n\r\n}\r\n","<igx-card class=\"app__list-holder\">\r\n  <igx-card-header class=\"app__card-header app__card-header--info\">\r\n      <h3 igxCardHeaderTitle>{{ totalNumber | number}}</h3>\r\n      <h5 igxCardHeaderSubtitle>Total {{ type }}</h5>\r\n  </igx-card-header>\r\n  <igx-divider></igx-divider>\r\n  <igx-card-content class=\"app__card-content\">\r\n      <igx-list class=\"app__list-inner\">\r\n        <igx-list-item #item *ngFor=\"let item of data\">\r\n          <span igxListLineTitle>{{ item.country }}</span>\r\n          <span igxListAction>{{ item.value | number }}</span>\r\n        </igx-list-item>\r\n      </igx-list>\r\n  </igx-card-content>\r\n</igx-card>\r\n","import { Component, OnInit, OnDestroy, EventEmitter, Output, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { IgxExpansionPanelComponent } from 'igniteui-angular';\r\nimport { IgxDataChartComponent, IgxNumericYAxisComponent, IgxCategoryXAxisComponent } from 'igniteui-angular-charts';\r\nimport { RemoteDataService } from '../services/data.service';\r\nimport { MapCasesComponent } from '../map-cases/map-cases.component';\r\nimport { ListCasesComponent } from '../list-cases/list-cases.component';\r\n\r\ninterface IListItem {\r\n  country: string;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n  providers: [RemoteDataService],\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n  host: {class: 'app__main'}\r\n})\r\nexport class MainComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(IgxExpansionPanelComponent, { static: true })\r\n  public panel: IgxExpansionPanelComponent;\r\n  @ViewChild('map', {static: true}) public map: MapCasesComponent;\r\n  @ViewChild('confirmedList', { static: true }) public confirmedList: ListCasesComponent;\r\n  @ViewChild('recoveredList', { static: true }) public recoveredList: ListCasesComponent;\r\n  @ViewChild('deathsList', { static: true }) public deathsList: ListCasesComponent;\r\n\r\n  private dataRequest$: any;\r\n  public confirmed: string;\r\n  public recovered: string;\r\n  public deaths: string;\r\n  public chartData: any[] = [];\r\n  public dailyData: any[] = [];\r\n  public dailyConfirmedCases: Map<string, number> = new Map();\r\n  public dailyRecoveredCases: Map<string, number> = new Map();\r\n\r\n  @ViewChild('chart', { static: true })\r\n  public chart: IgxDataChartComponent;\r\n\r\n  @ViewChild('xAxis', { static: true })\r\n  public xAxis: IgxCategoryXAxisComponent;\r\n\r\n  @ViewChild('yAxis', { static: true })\r\n  public yAxis: IgxNumericYAxisComponent;\r\n\r\n  constructor(private dataService: RemoteDataService) {\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.dataRequest$ = this.dataService.getDataSet(0);\r\n    this.dataRequest$.subscribe(csvData => {\r\n      const csvLines = csvData.split('\\n');\r\n      this.dailyConfirmedCases = this.fillData(csvLines);\r\n\r\n      // Transfor the data for Active cases Chart\r\n      for (const item of this.dailyConfirmedCases) {\r\n        this.dailyData.push({ date: new Date(item[0]), activeCases: item[1] });\r\n      }\r\n    });\r\n\r\n\r\n    this.dataRequest$ = this.dataService.getDataSet(1);\r\n    this.dataRequest$.subscribe(csvData => {\r\n      const csvLines = csvData.split('\\n');\r\n      this.dailyRecoveredCases = this.fillData(csvLines);\r\n\r\n      // Transfor the data for Active cases Chart\r\n      let i = 0;\r\n      for (const item of this.dailyRecoveredCases) {\r\n        this.dailyData[i].recoveredCases = item[1];\r\n        i++;\r\n      }\r\n\r\n      // Push/Assign the data to Active cases Chart\r\n      this.chartData = this.dailyData;\r\n    });\r\n  }\r\n\r\n  public fillData(csvData) {\r\n    let columns = [];\r\n    let day: string = null;\r\n    const cases: Map<string, number> = new Map();\r\n\r\n    // tslint:disable-next-line: prefer-for-of\r\n    for (let rowIdx = 0; rowIdx < csvData.length; rowIdx++) {\r\n      columns = csvData[rowIdx].replace(', ', ' ').split(',');\r\n\r\n      for (let columnIdx = 4; columnIdx <= columns.length - 1; columnIdx++) {\r\n        if (rowIdx === 0) {\r\n          day = new Date(columns[columnIdx]).toUTCString();\r\n          cases.set(day, 0);\r\n        } else {\r\n          const compound = cases.get(new Date(csvData[0].split(',')[columnIdx]).toUTCString()) +\r\n            parseInt(columns[columnIdx], 10);\r\n\r\n          cases.set(new Date(csvData[0].split(',')[columnIdx]).toUTCString(), compound);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Calculate daily difference.\r\n    for (let index = 0; index < cases.size; index++) {\r\n      let newCasesCount = 0;\r\n      const currentElementKey = Array.from(cases.keys())[index];\r\n      const currentElementValue =  cases.get(currentElementKey);\r\n\r\n      const nextElementKey = Array.from(cases.keys())[index + 1];\r\n      const nextElementValue =  cases.get(nextElementKey);\r\n\r\n      if (currentElementValue < nextElementValue) {\r\n        newCasesCount = nextElementValue - currentElementValue;\r\n\r\n        cases.set(currentElementKey, newCasesCount);\r\n      } else {\r\n        cases.set(currentElementKey, 0);\r\n      }\r\n    }\r\n\r\n    return cases;\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    if (this.dataRequest$) {\r\n      this.dataRequest$.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<main class=\"app__main-inner\">\r\n    <app-list-cases class=\"app__list--confirmed\" #confirmedList type=\"Confirmed\"></app-list-cases>\r\n\r\n    <section class=\"app__col app__col--map\">\r\n        <app-map-cases #map></app-map-cases>\r\n    </section>\r\n\r\n    <div class=\"app__col app__col--stats\">\r\n\r\n        <div class=\"app__row app__list-stack\">\r\n            <app-list-cases class=\"app__list--deaths\" #deathsList type=\"Deaths\"></app-list-cases>\r\n            <app-list-cases class=\"app__list--recovered\" #recoveredList type=\"Recovered\"></app-list-cases>\r\n        </div>\r\n\r\n        <div class=\"app__charts\">\r\n            <igx-tabs  class=\"app__charts-tabs\" tabsType=\"fixed\">\r\n                <igx-tabs-group label=\"actual\"></igx-tabs-group>\r\n                <igx-tabs-group label=\"logarithmic\"></igx-tabs-group>\r\n                <igx-tabs-group label=\"daily\">\r\n                    <div class=\"app__chart-wrapper\">\r\n                      <igx-legend class=\"app__charts-legend\" #legend orientation=\"Horizontal\"></igx-legend>\r\n                      <div class=\"app__chart-component\">\r\n                        <igx-data-chart  class=\"app__charts-chart\" #chart [legend]=\"legend\" [dataSource]=\"chartData\" isHorizontalZoomEnabled=\"true\">\r\n                          <igx-numeric-y-axis #yAxis title=\"New and recovered cases\">\r\n                          </igx-numeric-y-axis>\r\n                          <igx-category-x-axis label=\"date\" title=\"Date\" #xAxis>\r\n                          </igx-category-x-axis>\r\n\r\n                            <igx-column-series valueMemberPath=\"activeCases\" labelMemberPath=\"date\"\r\n                                title=\"New Confirmed Cases\" [xAxis]=\"xAxis\" [yAxis]=\"yAxis\" showDefaultTooltip=\"true\">\r\n                            </igx-column-series>\r\n                            <igx-column-series valueMemberPath=\"recoveredCases\" labelMemberPath=\"date\"\r\n                                title=\"Recovered Cases\" [xAxis]=\"xAxis\" [yAxis]=\"yAxis\" showDefaultTooltip=\"true\">\r\n                            </igx-column-series>\r\n                        </igx-data-chart>\r\n                      </div>\r\n                    </div>\r\n                </igx-tabs-group>\r\n            </igx-tabs>\r\n        </div>\r\n    </div>\r\n</main>","import { Component, TemplateRef, ViewChild, OnInit } from '@angular/core';\r\nimport { IgxGeographicTileSeriesComponent, IgxTileGeneratorMapImagery\r\n} from 'igniteui-angular-maps';\r\nimport { IgxGeographicMapComponent } from 'igniteui-angular-maps';\r\nimport { IgxHeatTileGenerator } from 'igniteui-angular-core';\r\nimport { RemoteDataService } from '../services/data.service';\r\n\r\n@Component({\r\n    providers: [RemoteDataService],\r\n    selector: 'app-map-cases',\r\n    templateUrl: './map-cases.component.html',\r\n    styleUrls: ['./map-cases.component.scss'],\r\n    host: {class: 'app__map-wrapper'}\r\n})\r\nexport class MapCasesComponent implements OnInit {\r\n\r\n    @ViewChild('map', {static: true}) public map: IgxGeographicMapComponent;\r\n    @ViewChild('template', {static: true}) public tooltip: TemplateRef<object>;\r\n\r\n    public tileImagery: IgxTileGeneratorMapImagery;\r\n    public confirmedSeries = new IgxGeographicTileSeriesComponent();\r\n    public recoveredSeries = new IgxGeographicTileSeriesComponent();\r\n    public deathSeries = new IgxGeographicTileSeriesComponent();\r\n    public series: Array<IgxGeographicTileSeriesComponent> = [this.confirmedSeries, this.recoveredSeries, this.deathSeries];\r\n    public dataSetButtons: any[];\r\n    public dataSets = ['Confirmed', 'Recovered', 'Deaths'];\r\n    public scaleColors = [\r\n        [\r\n            'rgba(255, 0, 0, .1)',\r\n            'rgba(255, 0, 0, .3)',\r\n            'rgba(255, 0, 0, .5)',\r\n            'rgba(255, 0, 0, .6)',\r\n            'rgba(255, 0, 0, .7843)'],\r\n        [\r\n            'rgba(50,205,50, 0.1)',\r\n            'rgba(50,205,50, 0.3)',\r\n            'rgba(50,205,50, 0.5)',\r\n            'rgba(50,205,50, 0.7)',\r\n            'rgba(50,205,50, 0.9)'],\r\n        [\r\n            'rgba(255, 0, 0, .1)',\r\n            'rgba(255, 0, 0, .3)',\r\n            'rgba(255, 0, 0, .5)',\r\n            'rgba(255, 0, 0, .6)',\r\n            'rgba(255, 0, 0, .7843)']\r\n    ];\r\n    public data: string;\r\n    private dataRequest$: any;\r\n\r\n    constructor(private dataService: RemoteDataService) {\r\n        this.dataSetButtons = [\r\n            {\r\n                name: 'Total',\r\n                selected: true\r\n            },\r\n            {\r\n                name: 'Recovered',\r\n                selected: false\r\n            },\r\n            {\r\n                name: 'Deaths',\r\n                selected: false\r\n            }\r\n    ];\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.loadDataSet(0);\r\n    }\r\n\r\n    public loadDataSet(index: number) {\r\n        this.dataRequest$ = this.dataService.getDataSet(index);\r\n        this.dataRequest$.subscribe(csvData => {\r\n            this.onDataLoaded(csvData, index);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * fetching JSON data with geographic locations from public folder\r\n     */\r\n    public onDataSetSelected(event: any) {\r\n        this.loadDataSet(event.index);\r\n    }\r\n\r\n    /**\r\n     * Fill the map series corresponding to the passd index with tile imagery and add to map.\r\n     */\r\n    public onDataLoaded(csvData: string, index: number) {\r\n        csvData = csvData.replace(/, /g, ' - ');\r\n        csvData = csvData.replace(/\"/g, '');\r\n        const csvLines = csvData.split('\\n');\r\n        const lat: number[] = [];\r\n        const lon: number[] = [];\r\n        const val: number[] = [];\r\n        this.tileImagery = new IgxTileGeneratorMapImagery();\r\n\r\n        for (let i = 1; i < csvLines.length; i++) {\r\n            const columns = csvLines[i].split(',');\r\n            lat.push(parseInt(columns[2], 10));\r\n            lon.push(parseInt(columns[3], 10));\r\n            const value = parseInt(columns[columns.length - 1], 10);\r\n            val.push(value);\r\n        }\r\n\r\n        // generating heat map imagery tiles\r\n        const gen = new IgxHeatTileGenerator();\r\n        gen.xValues = lon;\r\n        gen.yValues = lat;\r\n        gen.values = val;\r\n        gen.blurRadius = 6;\r\n        gen.maxBlurRadius = 20;\r\n        gen.useBlurRadiusAdjustedForZoom = true;\r\n        gen.minimumColor = 'rgba(100, 255, 0, 0.5)';\r\n        gen.maximumColor = 'rgba(255, 255, 0, 0.5)';\r\n        gen.useGlobalMinMax = true;\r\n        gen.useGlobalMinMaxAdjustedForZoom = true;\r\n        gen.useLogarithmicScale = true;\r\n        gen.useWebWorkers = true;\r\n        // gen.webWorkerInstance = new Worker();\r\n        gen.webWorkerInstance = new Worker('../heatmap.worker.ts', { type: 'module' });\r\n\r\n        gen.scaleColors = this.scaleColors[index];\r\n        this.tileImagery.tileGenerator = gen;\r\n\r\n        // generating heat map series\r\n        this.series[index].name = 'heatMapSeries';\r\n        this.series[index].tileImagery = this.tileImagery;\r\n\r\n        this.map.clearTileCache();\r\n        // add heat map series to the map\r\n        this.map.series.clear();\r\n        this.map.series.add(this.series[index]);\r\n        const geoBounds = {\r\n            height: 140,\r\n            left: -80,\r\n            top: 0,\r\n            width: 260\r\n        };\r\n        this.map.zoomToGeographic(geoBounds);\r\n        this.map.zoomToGeographic(geoBounds);\r\n    }\r\n\r\n    /**\r\n     * Fill the map series corresponding to the passd index with tile imagery and add to map.\r\n     */\r\n    // public addMapSeries(csvData: string, index: number) {\r\n    //     const csvLines = csvData.split('\\n');\r\n    //     const lat: number[] = [];\r\n    //     const lon: number[] = [];\r\n    //     const val: number[] = [];\r\n    //     this.tileImagery = new IgxTileGeneratorMapImagery();\r\n\r\n    //     for (let i = 1; i < csvLines.length; i++) {\r\n    //         const columns = csvLines[i].split(',');\r\n    //         lat.push(parseInt(columns[2], 10));\r\n    //         lon.push(parseInt(columns[3], 10));\r\n    //         const value = parseInt(columns[columns.length - 1], 10);\r\n    //         val.push(value);\r\n    //     }\r\n\r\n    //     // generating heat map imagery tiles\r\n    //     const gen = new IgxHeatTileGenerator();\r\n    //     gen.xValues = lon;\r\n    //     gen.yValues = lat;\r\n    //     gen.values = val;\r\n    //     gen.blurRadius = 6;\r\n    //     gen.maxBlurRadius = 20;\r\n    //     gen.useBlurRadiusAdjustedForZoom = true;\r\n    //     gen.minimumColor = 'rgba(100, 255, 0, 0.5)';\r\n    //     gen.maximumColor = 'rgba(255, 255, 0, 0.5)';\r\n    //     gen.useGlobalMinMax = true;\r\n    //     gen.useGlobalMinMaxAdjustedForZoom = true;\r\n    //     gen.useLogarithmicScale = true;\r\n    //     gen.useWebWorkers = true;\r\n    //     // gen.webWorkerInstance = new Worker();\r\n    //     gen.webWorkerInstance = new Worker('../heatmap.worker.ts', { type: 'module' });\r\n\r\n    //     gen.scaleColors = this.scaleColors[index];\r\n    //     this.tileImagery.tileGenerator = gen;\r\n\r\n    //     // generating heat map series\r\n    //     this.series[index].name = 'heatMapSeries';\r\n    //     this.series[index].tileImagery = this.tileImagery;\r\n\r\n    //     // add heat map series to the map\r\n    //     this.map.series.clear();\r\n    //     this.map.series.add(this.series[index]);\r\n    //     const geoBounds = {\r\n    //         height: Math.abs(50 - 15),\r\n    //         left: 85,\r\n    //         top: 15,\r\n    //         width: Math.abs(-130 + 65)\r\n    //     };\r\n    //     // this.map.zoomToGeographic(geoBounds);\r\n    // }\r\n}\r\n","<div class=\"app__map-inner\">\r\n    <igx-buttongroup class=\"app__map-button-group\" [multiSelection]=\"false\" (onSelect)=\"onDataSetSelected($event)\">\r\n      <button igxButton *ngFor=\"let button of dataSetButtons\" [selected]=\"button.selected\">\r\n        <span class=\"ellipsis\">\r\n          {{ button.name }}\r\n        </span>\r\n      </button>\r\n    </igx-buttongroup>\r\n    <igx-geographic-map class=\"app__map\" #map zoomable=\"true\"></igx-geographic-map>\r\n  </div>\r\n\r\n  <ng-template let-series=\"series\" let-item=\"item\" #template>\r\n      <div>\r\n          <span>Country: {{item.county}}</span>\r\n          <span>Infected: {{item.density}}</span>\r\n      </div>\r\n  </ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n// base URL for the data files\r\nconst BASE_URL = 'https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series';\r\nconst TIME_SERIES = 'csse_covid_19_time_series';\r\nconst EMPTY_STRING = '';\r\n\r\nexport enum DATA_SET {\r\n    CONFIRMED = 'Confirmed',\r\n    RECOVERED = 'Recovered',\r\n    DEATHS = 'Deaths'\r\n}\r\n\r\n@Injectable()\r\nexport class RemoteDataService {\r\n    public dataSets = ['Confirmed', 'Recovered', 'Deaths'];\r\n    constructor() {}\r\n\r\n    /**\r\n     * Retrieves data from specific file, based on the index passed.\r\n     */\r\n    public getDataSet(index: number): Observable<any> {\r\n        const baseDataPath = '../../assets/Data/time_series_19-covid-';\r\n        const dataSet = this.dataSets[index];\r\n        const data$ = Observable.create(observer => {\r\n            fetch(`${baseDataPath}${dataSet}.csv`)\r\n              .then(response => response.text()) // or text() or blob() etc.\r\n              .then(data => {\r\n                observer.next(data);\r\n                observer.complete();\r\n              })\r\n              .catch(err => observer.error(err));\r\n          });\r\n\r\n        return data$;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}